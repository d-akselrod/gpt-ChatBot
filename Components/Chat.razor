@page "/Chat"
@using System.IO;

<link href="Chat.razor.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400&display=swap" rel="stylesheet">

<div id="chat">
    <div id="User-Input">
        <input type="text" @bind="prompt" @onkeydown="@(e => { if(e.Key == "Enter") HandleSubmit(); })"/>
        <button @onclick="HandleSubmit">Submit</button>
    </div>
    <div id="messages">
        @for(int i = 0; i < messages.Count; i++)
        {
            @if(i % 2 == 0)
            {
                <div class="message prompt">
                    <img src="https://static.vecteezy.com/system/resources/previews/007/296/443/original/user-icon-person-icon-client-symbol-profile-icon-vector.jpg" alt="human">
                    <p id="message">@messages[i].message</p>
                    <!--<p id="time">@messages[i].time</p>-->
                </div>
            }
            else
            {
                <div class="message response">
                    <img src="https://static.vecteezy.com/system/resources/previews/021/059/827/non_2x/chatgpt-logo-chat-gpt-icon-on-white-background-free-vector.jpg" alt="chatGPT">
                    <p id="message">@messages[i].message</p>
                    <!--<p id="time">@messages[i].time</p>-->
                </div>
            }
        }
    </div> 
</div>

@code 
{
    private string prompt { get; set; }
    private string response { get; set; }
    private readonly ChatAPI chatAPI;

    private List<Message> prompts;
    private List<Message> responses;
    private List<Message> messages;

    private bool busy;

    public Chat()
    {
        prompts = new List<Message>();
        responses = new List<Message>();
        messages = new List<Message>();
        busy = false;

        string key = "abc";
        string filePath = "Key.txt";

        if (File.Exists(filePath))
        {
            using (StreamReader reader = new StreamReader(filePath))
            {
                key = reader.ReadLine();
            }
        }
        else
        {
            key = "def";
        }

        chatAPI = new ChatAPI(key);
    }

    private async Task HandleSubmit()
    {        
        if(prompt == null || prompt == "" || busy == true)
        {
            return;
        }
        busy = true;

        prompts.Add(new Message(prompt,DateTime.Now));
        messages.Add(new Message(prompt,DateTime.Now));
        prompt = "";

        response = await chatAPI.SendMessageAndGetResponse(prompt);
        await Task.Delay(1000);
        <!--response = "My default response";-->

        responses.Add(new Message(response,DateTime.Now));
        messages.Add(new Message(response,DateTime.Now));
        
        response = "My default response";
        
        busy = false;
    }
}